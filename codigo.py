# -*- coding: utf-8 -*-
"""codigo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lmm1YlchzRqfICIB_kMsnW41QpRzE5cn
"""



import streamlit as st
import pandas as pd
import requests
import matplotlib.pyplot as plt
import altair as alt

# Título de la aplicación
st.title('Aplicación Web: Datos desde una API REST')

# URL de la API REST
api_url = 'https://jsonplaceholder.typicode.com/posts'

# Función para obtener datos de la API y devolver un DataFrame
def obtener_datos_api(api_url):
    """Función que realiza la petición a la API y devuelve un DataFrame."""
    response = requests.get(api_url)
    if response.status_code == 200:
        data = response.json()
        return pd.DataFrame(data)
    else:
        st.error('Error al obtener los datos de la API')
        return None

# Llamar a la función para obtener los datos
df = obtener_datos_api(api_url)

# Si hay datos, mostrar y procesar el DataFrame
if df is not None:
    # Mostrar las primeras 5 filas del DataFrame
    st.write('Primeras 5 filas del DataFrame:')
    st.write(df.head())

    # Selección de columnas para visualizar
    columnas = st.multiselect('Selecciona las columnas a visualizar',
                              df.columns.tolist(), default=df.columns.tolist())
    df_seleccionado = df[columnas]
    st.write('Datos seleccionados:')
    st.write(df_seleccionado)

    # Filtrar por ID
    id_filtro = st.slider('Filtrar por ID (entre 1 y 100)', 1, 100, 50)
    df_filtrado = df[df['id'] <= id_filtro]
    st.write(f'Mostrando datos donde ID <= {id_filtro}:')
    st.write(df_filtrado)

    # Gráfico de barras de User ID
    fig, ax = plt.subplots()
    df['userId'].value_counts().sort_index().plot(kind='bar', ax=ax)
    ax.set_title('Conteo de User ID')
    ax.set_xlabel('User ID')
    ax.set_ylabel('Frecuencia')
    st.pyplot(fig)

    # Gráfico interactivo de Altair
    x_axis = st.selectbox('Selecciona el eje X', df.select_dtypes(include='number').columns)
    y_axis = st.selectbox('Selecciona el eje Y', df.select_dtypes(include='number').columns)
    chart = alt.Chart(df).mark_circle(size=60).encode(
        x=x_axis,
        y=y_axis,
        tooltip=[x_axis, y_axis]
    ).interactive()
    st.altair_chart(chart, use_container_width=True)